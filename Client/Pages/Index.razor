@page "/"
@page "/home"
@using Core
@using System.Security.Claims
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider Auth
@inject AppState State

<div class="padding-div">
<PageTitle>Home</PageTitle>

@if (projects == null)
{
    <p><em>Welcome! Log in to see projects.</em></p>

} else {
<h1>Available Projects</h1>

<p>Here is an overview of all the available projects and theses.</p>
<p>For a better suited match, go to the Explore page.</p>

<table class="table">
    <thead>
        <tr>
            <th>Project</th>
            <th>Supervisor</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var project in projects)
        {
        <tr>
            <td>@project.Name</td>
            <td>@project.SupervisorName</td>
            <td><button class="btn button" @onclick="()=>View(project)">Details</button></td>
        </tr>
        }    
    </tbody>
</table>
}
</div>

@code{
private ProjectDTO[]? projects;

private StudentDTO student = new();

protected override async Task OnInitializedAsync()
    {
        var authState = await Auth.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            if (!State.LoggedIn) {

                student.Name = user.Identity.Name!;
                student.Email = user.Identity.Name!.Split(" ")[0] + "@Microsoft.com";
                student.Degree = DegreeEnum.Bachelor;
                student.DOB = new DateTime(1990, 1, 1);
                student.University = UniversityEnum.ITU;
                student.AppliedProjects = new List<int>();

                var createResponse = await Http.PostAsJsonAsync<StudentDTO>("api/Students", student);

                var id = await createResponse.Content.ReadFromJsonAsync<int>();

                State.LoggedIn = true;
                State.UserId = id;

                if (createResponse.IsSuccessStatusCode)
                {
                    var uri = $"{NavigationManager.BaseUri}userpage";

                    NavigationManager.NavigateTo(uri);
                }
            }
            
            projects = await Http.GetFromJsonAsync<ProjectDTO[]>("api/Projects");
        }
    }
    private void View(ProjectDTO project){
        var uri = $"{NavigationManager.BaseUri}details/{project.Id}";
        NavigationManager.NavigateTo(uri);

    }
}